[{"title":"shadowPath和autoLayout问题分析","date":"2017-05-16T07:34:05.000Z","path":"2017/05/16/iOS/shadowPath和autoLayout问题分析/","text":"前提前一段时间在开发的过程中，遇到了一个坑，当我给某个View添加阴影效果的时候，因为这个View的Size是动态的，然后动态改变View的size的时候，阴影没有随着改变，用了半天才把这个问题解决，最后总结的时候觉得是自己对阴影效果理解不透彻，所以在此记录一下，以便加深印象，下面附上代码分析： 代码分析1234567891011121314// shadowColor阴影颜色view.layer.shadowColor = [UIColor blackColor].CGColor;// shadowOffset阴影偏移,x向右偏移4，y向下偏移4，默认(0, -3)view.layer.shadowOffset = CGSizeMake(4,4);// 阴影透明度，默认0view.layer.shadowOpacity = 0.3;// 阴影半径，默认3view.layer.shadowRadius = 4;// shadowPath阴影路径view.layer.shadowPath = [[UIBezierPath bezierPathWithRect:view.bounds] CGPath]; 注意shadowPath可以提前告诉 CoreAnimation 你要渲染的view的形状的Shape，可以减少离屏渲染的计算时间，大大的提高性能，防止低性能设备的卡顿出现 然而！！！但是！！！意外发生了。。。因为设置了shadowPath，当因为屏幕的不一样，autolayout会改变view的size，或者某些的操作改变了view的size，shadowPath没有随着改变，导致阴影的位置对不上，一开始没有往这方面想，以为是分辨率不一样要不同的处理，弄了半天。。。 最后发现解决问题的方向搞错了，网上终于找了真正的原因，下面是个人觉得比较好的解决方式，上代码！ 1234- (void)layoutSubviews &#123; [super layoutSubviews]; self.layer.shadowPath = [UIBezierPath bezierPathWithRect:self.layer.bounds].CGPath;&#125; 新建一个UIView的子类，重写layoutSubviews方法，当view改变大小会调用此方法，然后相应的改变shadowPath，完美解决！！！ end","tags":[{"name":"iOS","slug":"iOS","permalink":"http://www.cameron-li.com/tags/iOS/"}]},{"title":"Markdown 语法","date":"2017-05-12T09:27:49.000Z","path":"2017/05/12/Blog/Markdown语法/","text":"在行首输入 1－6 个 # 符号。符号的个数决定了标题的层级： 1级标题# 1级标题 2级标题## 2级标题 3级标题### 3级标题 4级标题#### 4级标题 5级标题##### 5级标题 6级标题###### 6级标题 强调### 强调 ———-加粗： 加粗文本 **加粗文本** 斜体： 斜体文本 *斜体文本* 链接 链接文本 [链接文本](http://example.com/) 图片 ![图片标题](http://lkl.mx/img/EkZYGsPBg) 列表 有序列表: 第一项 第二项 第三项 1231. 第一项2. 第二项3. 第三项 无序列表: 列表项 列表项 列表项 123- 列表项 - 列表项 - 列表项 引用 Stay hungry, stay foolish. 1&gt; Stay hungry, stay foolish. Code 行内代码：foo.go() . `foo.go()` 多行代码：12let app = &quot;Markdown&quot;print(&quot;Good&quot;) 12let app = &quot;Markdown&quot;print(&quot;Good&quot;) 缩紧代码 四个空格或者一个 Tab 表示缩进代码： 这是一个普通的段落。 这是一个 代码块 在输入每行内容前加tab 表格 简单的表格: 标题 标题 标题 单元格 单元格 单元格 单元格 单元格 单元格 1234标题 | 标题 | 标题------- | ------- | -------单元格 | 单元格 | 单元格单元格 | 单元格 | 单元格 你还可以添加一些边框： 标题 标题 标题 单元格 单元格 单元格 单元格 单元格 单元格 1234| 标题 | 标题 | 标题 || ------- | ------- | ------- || 单元格 | 单元格 | 单元格 || 单元格 | 单元格 | 单元格 | 你可以控制单元格的对齐方式： 标题 标题 标题 左 中 右 左 中 右 1234标题 | 标题 | 标题:----- | :----: | ------:左 | 中 | 右左 | 中 | 右 删除 Strikethrough 1~~Strikethrough~~ 分割线 三种类型的分割线: 1--- 1* * * 1- - - - 换行 一 在行尾添加两个空格或者换行符代表换行： 这行的行尾油两个空格这是一个新行。","tags":[{"name":"blog","slug":"blog","permalink":"http://www.cameron-li.com/tags/blog/"}]},{"title":"Hello World","date":"2017-02-10T03:32:01.000Z","path":"2017/02/10/Blog/hello-world/","text":"刚刚搭好个站，这是我的Blog第一篇文章，用的是HEXO，主题用的是Yilia，记录一下，希望以后可以多写一些文章🙏。 下面是一些基本的HEXO命令Quick StartCreate a new post123$ hexo new \"My New Post\"//缩写$ hexo n \"My New Post\" More info: Writing Run server123$ hexo server//缩写$ hexo s More info: Server Generate static files123$ hexo generate//缩写$ hexo g More info: Generating Deploy to remote sites123$ hexo deploy//缩写$ hexo d More info: Deployment","tags":[{"name":"随笔","slug":"随笔","permalink":"http://www.cameron-li.com/tags/随笔/"}]}]